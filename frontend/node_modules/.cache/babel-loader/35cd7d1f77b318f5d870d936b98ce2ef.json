{"ast":null,"code":"import _asyncToGenerator from\"C:\\\\Users\\\\user\\\\Desktop\\\\m\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";import _slicedToArray from\"C:\\\\Users\\\\user\\\\Desktop\\\\m\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\slicedToArray.js\";import _regeneratorRuntime from\"C:\\\\Users\\\\user\\\\Desktop\\\\m\\\\frontend\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import axios from'axios';import React,{useContext,useEffect,useRef,useState}from'react';import{LoadScript,GoogleMap,StandaloneSearchBox,Marker}from'@react-google-maps/api';import{useNavigate}from'react-router-dom';import{Store}from'../Store';import Button from'react-bootstrap/Button';import{toast}from'react-toastify';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var defaultLocation={lat:45.516,lng:-73.56};var libs=['places'];export default function MapScreen(){var _useContext=useContext(Store),state=_useContext.state,ctxDispatch=_useContext.dispatch;var userInfo=state.userInfo;var navigate=useNavigate();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),googleApiKey=_useState2[0],setGoogleApiKey=_useState2[1];var _useState3=useState(defaultLocation),_useState4=_slicedToArray(_useState3,2),center=_useState4[0],setCenter=_useState4[1];var _useState5=useState(center),_useState6=_slicedToArray(_useState5,2),location=_useState6[0],setLocation=_useState6[1];var mapRef=useRef(null);var placeRef=useRef(null);var markerRef=useRef(null);var getUserCurrentLocation=function getUserCurrentLocation(){if(!navigator.geolocation){alert('Système de géolocalisation non pris en charge par ce navigateur');}else{navigator.geolocation.getCurrentPosition(function(position){setCenter({lat:position.coords.latitude,lng:position.coords.longitude});setLocation({lat:position.coords.latitude,lng:position.coords.longitude});});}};useEffect(function(){var fetch=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var _yield$axios,data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios('/api/keys/google',{headers:{Authorization:\"BEARER \".concat(userInfo.token)}});case 2:_yield$axios=_context.sent;data=_yield$axios.data;setGoogleApiKey(data.key);getUserCurrentLocation();case 6:case\"end\":return _context.stop();}}},_callee);}));return function fetch(){return _ref.apply(this,arguments);};}();fetch();ctxDispatch({type:'SET_FULLBOX_ON'});},[ctxDispatch]);var onLoad=function onLoad(map){mapRef.current=map;};var onIdle=function onIdle(){setLocation({lat:mapRef.current.center.lat(),lng:mapRef.current.center.lng()});};var onLoadPlaces=function onLoadPlaces(place){placeRef.current=place;};var onPlacesChanged=function onPlacesChanged(){var place=placeRef.current.getPlaces()[0].geometry.location;setCenter({lat:place.lat(),lng:place.lng()});setLocation({lat:place.lat(),lng:place.lng()});};var onMarkerLoad=function onMarkerLoad(marker){markerRef.current=marker;};var onConfirm=function onConfirm(){var places=placeRef.current.getPlaces()||[{}];ctxDispatch({type:'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',payload:{lat:location.lat,lng:location.lng,address:places[0].formatted_address,name:places[0].name,vicinity:places[0].vicinity,googleAddressId:places[0].id}});toast.success('Emplacement sélectionné avec succès.');navigate('/shipping');};return/*#__PURE__*/_jsx(\"div\",{className:\"full-box\",children:/*#__PURE__*/_jsx(LoadScript,{libraries:libs,googleMapsApiKey:googleApiKey,children:/*#__PURE__*/_jsxs(GoogleMap,{id:\"smaple-map\",mapContainerStyle:{height:'100%',width:'100%'},center:center,zoom:15,onLoad:onLoad,onIdle:onIdle,children:[/*#__PURE__*/_jsx(StandaloneSearchBox,{onLoad:onLoadPlaces,onPlacesChanged:onPlacesChanged,children:/*#__PURE__*/_jsxs(\"div\",{className:\"map-input-box\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Enter your address\"}),/*#__PURE__*/_jsx(Button,{type:\"button\",onClick:onConfirm,children:\"Confirm\"})]})}),/*#__PURE__*/_jsx(Marker,{position:location,onLoad:onMarkerLoad})]})})});}","map":{"version":3,"sources":["C:/Users/user/Desktop/m/frontend/src/screens/MapScreen.js"],"names":["axios","React","useContext","useEffect","useRef","useState","LoadScript","GoogleMap","StandaloneSearchBox","Marker","useNavigate","Store","Button","toast","defaultLocation","lat","lng","libs","MapScreen","state","ctxDispatch","dispatch","userInfo","navigate","googleApiKey","setGoogleApiKey","center","setCenter","location","setLocation","mapRef","placeRef","markerRef","getUserCurrentLocation","navigator","geolocation","alert","getCurrentPosition","position","coords","latitude","longitude","fetch","headers","Authorization","token","data","key","type","onLoad","map","current","onIdle","onLoadPlaces","place","onPlacesChanged","getPlaces","geometry","onMarkerLoad","marker","onConfirm","places","payload","address","formatted_address","name","vicinity","googleAddressId","id","success","height","width"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useContext, useEffect, useRef, useState } from 'react';\r\nimport {\r\n  LoadScript,\r\n  GoogleMap,\r\n  StandaloneSearchBox,\r\n  Marker,\r\n} from '@react-google-maps/api';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Store } from '../Store';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst defaultLocation = { lat: 45.516, lng: -73.56 };\r\nconst libs = ['places'];\r\n\r\nexport default function MapScreen() {\r\n  const { state, dispatch: ctxDispatch } = useContext(Store);\r\n  const { userInfo } = state;\r\n  const navigate = useNavigate();\r\n  const [googleApiKey, setGoogleApiKey] = useState('');\r\n  const [center, setCenter] = useState(defaultLocation);\r\n  const [location, setLocation] = useState(center);\r\n\r\n  const mapRef = useRef(null);\r\n  const placeRef = useRef(null);\r\n  const markerRef = useRef(null);\r\n\r\n  const getUserCurrentLocation = () => {\r\n    if (!navigator.geolocation) {\r\n      alert('Système de géolocalisation non pris en charge par ce navigateur');\r\n    } else {\r\n      navigator.geolocation.getCurrentPosition((position) => {\r\n        setCenter({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n        setLocation({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const fetch = async () => {\r\n      const { data } = await axios('/api/keys/google', {\r\n        headers: { Authorization: `BEARER ${userInfo.token}` },\r\n      });\r\n      setGoogleApiKey(data.key);\r\n      getUserCurrentLocation();\r\n    };\r\n\r\n    fetch();\r\n    ctxDispatch({\r\n      type: 'SET_FULLBOX_ON',\r\n    });\r\n  }, [ctxDispatch]);\r\n\r\n  const onLoad = (map) => {\r\n    mapRef.current = map;\r\n  };\r\n  const onIdle = () => {\r\n    setLocation({\r\n      lat: mapRef.current.center.lat(),\r\n      lng: mapRef.current.center.lng(),\r\n    });\r\n  };\r\n\r\n  const onLoadPlaces = (place) => {\r\n    placeRef.current = place;\r\n  };\r\n  const onPlacesChanged = () => {\r\n    const place = placeRef.current.getPlaces()[0].geometry.location;\r\n    setCenter({ lat: place.lat(), lng: place.lng() });\r\n    setLocation({ lat: place.lat(), lng: place.lng() });\r\n  };\r\n\r\n  const onMarkerLoad = (marker) => {\r\n    markerRef.current = marker;\r\n  };\r\n\r\n  const onConfirm = () => {\r\n    const places = placeRef.current.getPlaces() || [{}];\r\n    ctxDispatch({\r\n      type: 'SAVE_SHIPPING_ADDRESS_MAP_LOCATION',\r\n      payload: {\r\n        lat: location.lat,\r\n        lng: location.lng,\r\n        address: places[0].formatted_address,\r\n        name: places[0].name,\r\n        vicinity: places[0].vicinity,\r\n        googleAddressId: places[0].id,\r\n      },\r\n    });\r\n    toast.success('Emplacement sélectionné avec succès.');\r\n    navigate('/shipping');\r\n  };\r\n  return (\r\n    <div className=\"full-box\">\r\n      <LoadScript libraries={libs} googleMapsApiKey={googleApiKey}>\r\n        <GoogleMap\r\n          id=\"smaple-map\"\r\n          mapContainerStyle={{ height: '100%', width: '100%' }}\r\n          center={center}\r\n          zoom={15}\r\n          onLoad={onLoad}\r\n          onIdle={onIdle}\r\n        >\r\n          <StandaloneSearchBox\r\n            onLoad={onLoadPlaces}\r\n            onPlacesChanged={onPlacesChanged}\r\n          >\r\n            <div className=\"map-input-box\">\r\n              <input type=\"text\" placeholder=\"Enter your address\"></input>\r\n              <Button type=\"button\" onClick={onConfirm}>\r\n                Confirm\r\n              </Button>\r\n            </div>\r\n          </StandaloneSearchBox>\r\n          <Marker position={location} onLoad={onMarkerLoad}></Marker>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}